{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.4", "generated_at": "2025-07-13T09:34:53.857962Z", "invocation_id": "3234ab63-263c-4e3d-b54a-f79651c8d488", "invocation_started_at": "2025-07-13T09:34:50.865523Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.330703Z", "completed_at": "2025-07-13T09:34:53.332925Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.333439Z", "completed_at": "2025-07-13T09:34:53.333450Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009011983871459961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ev_infra_dbt.stg_vehicles", "compiled": true, "compiled_code": "\n\nSELECT\n  objectid,\n  make,\n  model,\n  motive_power,\n  tla,\n  TO_DATE(first_nz_registration_year || '-' || first_nz_registration_month || '-01', 'YYYY-MM-DD') AS registration_date,\n  vehicle_year,\n  gross_vehicle_mass,  \n  power_rating,       \n  fc_combined AS fuel_consumption_combined,  \n  COALESCE(submodel, 'UNKNOWN') AS submodel,\n  CASE \n    WHEN motive_power ILIKE '%ELECTRIC%' OR motive_power ILIKE '%PLUG-IN%' THEN TRUE \n    ELSE FALSE \n  END AS is_electric\nFROM ev_infra_analysis.raw.raw_vehicles  -- Adjusted to match your source name\nWHERE is_electric = TRUE", "relation_name": "ev_infra_analysis.staging.stg_vehicles", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.325278Z", "completed_at": "2025-07-13T09:34:53.333176Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.333865Z", "completed_at": "2025-07-13T09:34:53.333872Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00974416732788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ev_infra_dbt.stg_charging_stations", "compiled": true, "compiled_code": "\n\nSELECT\n  data:\"ADDRESS\"::VARCHAR AS address,\n  REGEXP_REPLACE(data:\"GlobalID\"::VARCHAR, '^\\\\{|\\\\}$', '') AS global_id,  -- Removes { and }\n  data:\"NAME\"::VARCHAR AS name,\n  data:\"OBJECTID\"::VARCHAR AS objectid,\n  data:\"OPERATOR\"::VARCHAR AS operator,\n  data:\"OWNER\"::VARCHAR AS owner,\n  data:\"Type\"::VARCHAR AS type,\n  data:\"carParkCount\"::INT AS car_park_count,\n  data:\"connectorsList\"::VARCHAR AS connectors_list,\n  data:\"currentType\"::VARCHAR AS current_type,\n  TRY_TO_DATE(data:\"dateFirstOperational\"::VARCHAR, 'DD/MM/YYYY') AS date_first_operational,\n  data:\"hasCarparkCost\"::BOOLEAN AS has_carpark_cost,\n  data:\"hasChargingCost\"::BOOLEAN AS has_charging_cost,\n  data:\"hasTouristAttraction\"::BOOLEAN AS has_tourist_attraction,\n  data:\"is24Hours\"::BOOLEAN AS is_24_hours,\n  data:\"latitude\"::FLOAT AS latitude,\n  data:\"longitude\"::FLOAT AS longitude,\n  data:\"maxTimeLimit\"::VARCHAR AS max_time_limit,\n  data:\"numberOfConnectors\"::INT AS number_of_connectors,\n  TO_GEOGRAPHY('POINT(' || data:\"longitude\"::FLOAT || ' ' || data:\"latitude\"::FLOAT || ')') AS geometry  -- Casts to GEOGRAPHY point\nFROM ev_infra_analysis.raw.raw_charging_stations", "relation_name": "ev_infra_analysis.staging.stg_charging_stations", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.338771Z", "completed_at": "2025-07-13T09:34:53.348820Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.359991Z", "completed_at": "2025-07-13T09:34:53.360003Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024717092514038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ev_infra_dbt.dim_year_month_span", "compiled": true, "compiled_code": "\n\nWITH date_bounds AS (\n  SELECT\n    MIN(registration_date) AS min_date,\n    MAX(registration_date) AS max_date\n  FROM ev_infra_analysis.staging.stg_vehicles\n  UNION ALL\n  SELECT\n    MIN(date_first_operational),\n    MAX(date_first_operational)\n  FROM ev_infra_analysis.staging.stg_charging_stations\n),\nmin_max_date AS (\n  SELECT\n    MIN(min_date) AS min_date,\n    MAX(max_date) AS max_date\n  FROM date_bounds\n),\nmonthly_range AS (\n  SELECT\n    DATE_TRUNC('MONTH', min_date) AS date_key\n  FROM min_max_date\n  UNION ALL\n  SELECT\n    DATEADD(MONTH, 1, date_key)\n  FROM monthly_range\n  WHERE date_key < (SELECT DATE_TRUNC('MONTH', max_date) FROM min_max_date)\n)\nSELECT\n  date_key,\n  YEAR(date_key) AS year,\n  MONTH(date_key) AS month,\n  MONTHNAME(date_key) AS month_name\nFROM monthly_range\nWHERE date_key IS NOT NULL\nORDER BY date_key", "relation_name": "ev_infra_analysis.analytics.dim_year_month_span", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.344813Z", "completed_at": "2025-07-13T09:34:53.360923Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.363305Z", "completed_at": "2025-07-13T09:34:53.363319Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.025751590728759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ev_infra_dbt.fact_station_distances", "compiled": true, "compiled_code": "\n\n\n\nSELECT\n  s1.objectid AS station1_id,\n  s1.name AS station1_name,\n  s1.latitude AS station1_lat,\n  s1.longitude AS station1_lon,\n  s1.geometry AS station1_geometry,  -- GEOGRAPHY\n  s2.objectid AS station2_id,\n  s2.name AS station2_name,\n  s2.latitude AS station2_lat,\n  s2.longitude AS station2_lon,\n  s2.geometry AS station2_geometry,  -- GEOGRAPHY\n  HAVERSINE(s1.latitude, s1.longitude, s2.latitude, s2.longitude) AS distance_km_haversine,\n  ST_DISTANCE(s1.geometry, s2.geometry) / 1000 AS distance_km_st_distance  -- Convert meters to km\nFROM ev_infra_analysis.staging.stg_charging_stations s1\nLEFT JOIN ev_infra_analysis.staging.stg_charging_stations s2\n  ON s1.objectid != s2.objectid  -- Avoid self-pairing\nWHERE distance_km_haversine IS NOT NULL\n  AND distance_km_st_distance IS NOT NULL\nORDER BY station1_id, distance_km_haversine", "relation_name": "ev_infra_analysis.analytics.fact_station_distances", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.352367Z", "completed_at": "2025-07-13T09:34:53.362304Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.365016Z", "completed_at": "2025-07-13T09:34:53.365023Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022013425827026367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ev_infra_dbt.not_null_stg_charging_stations_objectid.7b1b52a628", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect objectid\nfrom ev_infra_analysis.staging.stg_charging_stations\nwhere objectid is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.349298Z", "completed_at": "2025-07-13T09:34:53.362779Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.365579Z", "completed_at": "2025-07-13T09:34:53.365590Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027346134185791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ev_infra_dbt.mart_ev_tla", "compiled": true, "compiled_code": "\n\nSELECT\n  tla,\n  COUNT(*) AS total_ev_count\nFROM ev_infra_analysis.staging.stg_vehicles\nWHERE is_electric = TRUE\nGROUP BY tla\nHAVING total_ev_count > 0\nORDER BY total_ev_count DESC", "relation_name": "ev_infra_analysis.analytics.mart_ev_tla", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.369413Z", "completed_at": "2025-07-13T09:34:53.377393Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.394811Z", "completed_at": "2025-07-13T09:34:53.394824Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03047657012939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ev_infra_dbt.not_null_stg_vehicles_objectid.aef4344a13", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect objectid\nfrom ev_infra_analysis.staging.stg_vehicles\nwhere objectid is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.378136Z", "completed_at": "2025-07-13T09:34:53.396149Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.398410Z", "completed_at": "2025-07-13T09:34:53.398421Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029758214950561523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ev_infra_dbt.unique_stg_charging_stations_objectid.f010354454", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    objectid as unique_field,\n    count(*) as n_records\n\nfrom ev_infra_analysis.staging.stg_charging_stations\nwhere objectid is not null\ngroup by objectid\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.386580Z", "completed_at": "2025-07-13T09:34:53.397338Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.399840Z", "completed_at": "2025-07-13T09:34:53.399851Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025420188903808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ev_infra_dbt.unique_stg_vehicles_objectid.43343891c6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    objectid as unique_field,\n    count(*) as n_records\n\nfrom ev_infra_analysis.staging.stg_vehicles\nwhere objectid is not null\ngroup by objectid\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.390897Z", "completed_at": "2025-07-13T09:34:53.397898Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.400681Z", "completed_at": "2025-07-13T09:34:53.400692Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02572774887084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ev_infra_dbt.fact_ev_charging_metrics", "compiled": true, "compiled_code": "\n\nWITH ev_counts AS (\n  SELECT\n    DATE_TRUNC('MONTH', registration_date) AS time_key,\n    COUNT(*) AS ev_count\n  FROM ev_infra_analysis.staging.stg_vehicles\n  GROUP BY time_key\n),\nstation_metrics AS (\n  SELECT\n    DATE_TRUNC('MONTH', date_first_operational) AS time_key,\n    COUNT(*) AS station_count,\n    SUM(number_of_connectors) AS connector_sum\n  FROM ev_infra_analysis.staging.stg_charging_stations\n  GROUP BY time_key\n)\nSELECT\n  dd.date_key,\n  dd.year,\n  dd.month,\n  dd.month_name,\n  COALESCE(ec.ev_count, 0) AS monthly_ev_count,\n  SUM(COALESCE(ec.ev_count, 0)) OVER (\n    ORDER BY dd.date_key\n    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW\n  ) AS cumulative_ev_count,\n  COALESCE(sm.station_count, 0) AS monthly_station_count,\n  SUM(COALESCE(sm.station_count, 0)) OVER (\n    ORDER BY dd.date_key\n    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW\n  ) AS cumulative_station_count,\n  COALESCE(sm.connector_sum, 0) AS monthly_connector_sum,\n  SUM(COALESCE(sm.connector_sum, 0)) OVER (\n    ORDER BY dd.date_key\n    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW\n  ) AS cumulative_connector_sum\nFROM ev_infra_analysis.analytics.dim_year_month_span dd\nLEFT JOIN ev_counts ec ON dd.date_key = ec.time_key\nLEFT JOIN station_metrics sm ON dd.date_key = sm.time_key\nWHERE dd.year IS NOT NULL", "relation_name": "ev_infra_analysis.analytics.fact_ev_charging_metrics", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.404033Z", "completed_at": "2025-07-13T09:34:53.410565Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.418647Z", "completed_at": "2025-07-13T09:34:53.418658Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019488811492919922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ev_infra_dbt.mart_ev_brands", "compiled": true, "compiled_code": "\n\nWITH brand_counts AS (\n  SELECT\n    DATE_TRUNC('MONTH', registration_date) AS time_key,\n    make,\n    COUNT(*) AS ev_count\n  FROM ev_infra_analysis.staging.stg_vehicles\n  WHERE is_electric = TRUE\n  GROUP BY time_key, make\n),\nall_brands AS (\n  SELECT DISTINCT make\n  FROM ev_infra_analysis.staging.stg_vehicles\n  WHERE is_electric = TRUE\n)\nSELECT\n  dd.date_key,\n  dd.year,\n  dd.month,\n  dd.month_name,\n  ab.make,\n  COALESCE(bc.ev_count, 0) AS monthly_ev_count,\n  SUM(COALESCE(bc.ev_count, 0)) OVER (\n    PARTITION BY ab.make\n    ORDER BY dd.date_key\n    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW\n  ) AS cumulative_ev_count\nFROM ev_infra_analysis.analytics.dim_year_month_span dd\nCROSS JOIN all_brands ab\nLEFT JOIN brand_counts bc\n  ON dd.date_key = bc.time_key AND ab.make = bc.make\nWHERE dd.date_key IS NOT NULL\nORDER BY dd.year, dd.month, ab.make", "relation_name": "ev_infra_analysis.analytics.mart_ev_brands", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.411094Z", "completed_at": "2025-07-13T09:34:53.419911Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.420974Z", "completed_at": "2025-07-13T09:34:53.420985Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017539262771606445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ev_infra_dbt.mart_charging_stations", "compiled": true, "compiled_code": "\n\nWITH ranked_distances AS (\n  SELECT\n    station1_id,\n    station1_name,\n    station2_id,\n    station2_name,\n    distance_km_st_distance,\n    station1_lat,\n    station2_lon,\n    station1_geometry,\n    ROW_NUMBER() OVER (\n      PARTITION BY station1_id\n      ORDER BY distance_km_st_distance ASC\n    ) AS rank\n  FROM ev_infra_analysis.analytics.fact_station_distances\n  WHERE distance_km_st_distance IS NOT NULL\n    AND distance_km_st_distance > 0  -- Exclude self (distance 0 if any)\n),\ntop_5_distances AS (\n  SELECT\n    station1_id,\n    station1_name,\n    ANY_VALUE(station1_lat) AS lat,\n    ANY_VALUE(station2_lon) AS lon,\n    AVG(distance_km_st_distance) AS avg_closest_5_distance_km,\n    ANY_VALUE(station1_geometry) AS station_geometry  -- Aggregate geometry (since same for all rows per station1_id)\n  FROM ranked_distances\n  WHERE rank <= 5\n  GROUP BY station1_id, station1_name\n)\nSELECT\n  station1_id AS station_id,\n  station1_name AS station_name,\n  avg_closest_5_distance_km,\n  lat,\n  lon,\n  station_geometry\nFROM top_5_distances\nORDER BY avg_closest_5_distance_km DESC", "relation_name": "ev_infra_analysis.analytics.mart_charging_stations", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-13T09:34:53.414529Z", "completed_at": "2025-07-13T09:34:53.420427Z"}, {"name": "execute", "started_at": "2025-07-13T09:34:53.421805Z", "completed_at": "2025-07-13T09:34:53.421816Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013138771057128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ev_infra_dbt.mart_ev_supply_demand", "compiled": true, "compiled_code": "\n\nSELECT\n  dd.year,\n  dd.month,\n  dd.month_name,\n  COALESCE(fm.monthly_ev_count, 0) AS monthly_ev_count,\n  COALESCE(fm.cumulative_ev_count, 0) AS cumulative_ev_count,\n  COALESCE(fm.monthly_station_count, 0) AS monthly_station_count,\n  COALESCE(fm.cumulative_station_count, 0) AS cumulative_station_count,\n  COALESCE(fm.monthly_connector_sum, 0) AS monthly_connector_sum,\n  COALESCE(fm.cumulative_connector_sum, 0) AS cumulative_connector_sum,\n  COALESCE(fm.cumulative_ev_count / NULLIF(fm.cumulative_station_count, 0), 0) AS cumulative_ev_per_station_ratio,\n  COALESCE(fm.cumulative_ev_count / NULLIF(fm.cumulative_connector_sum, 0), 0) AS cumulative_ev_per_connector_ratio\nFROM ev_infra_analysis.analytics.dim_year_month_span dd\nLEFT JOIN ev_infra_analysis.analytics.fact_ev_charging_metrics fm ON dd.date_key = fm.date_key\nWHERE dd.year IS NOT NULL", "relation_name": "ev_infra_analysis.analytics.mart_ev_supply_demand", "batch_results": null}], "elapsed_time": 2.4888784885406494, "args": {"use_colors": true, "strict_mode": false, "log_path": "/home/phildonovan/projects/firn-data-project/dbt/ev_infra_dbt/logs", "require_explicit_package_overrides_for_builtin_materializations": true, "exclude": [], "log_level": "info", "require_yaml_configuration_for_mf_time_spines": false, "static_parser": true, "select": [], "state_modified_compare_vars": false, "use_colors_file": true, "state_modified_compare_more_unrendered_values": false, "print": true, "cache_selected_only": false, "which": "generate", "project_dir": "/home/phildonovan/projects/firn-data-project/dbt/ev_infra_dbt", "compile": true, "use_fast_test_edges": false, "validate_macro_args": false, "require_resource_names_without_spaces": true, "show_all_deprecations": false, "require_all_warnings_handled_by_warn_error": false, "upload_to_artifacts_ingest_api": false, "quiet": false, "indirect_selection": "eager", "partial_parse_file_diff": true, "send_anonymous_usage_stats": true, "printer_width": 80, "favor_state": false, "log_format": "default", "empty_catalog": false, "static": false, "write_json": true, "warn_error_options": {"error": [], "warn": [], "silence": []}, "skip_nodes_if_on_run_start_fails": false, "defer": false, "log_format_file": "debug", "partial_parse": true, "introspect": true, "show_resource_report": false, "log_file_max_bytes": 10485760, "macro_debugging": false, "source_freshness_run_project_hooks": true, "log_level_file": "debug", "require_batched_execution_for_custom_microbatch_strategy": false, "populate_cache": true, "vars": {}, "require_nested_cumulative_type_params": false, "version_check": true, "profiles_dir": "/home/phildonovan/.dbt", "invocation_command": "dbt docs generate"}}